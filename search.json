[{"path":[]},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"done-once-install-library","dir":"Articles","previous_headings":"Setup","what":"1. (done once) Install Library","title":"Step by step example of analysis","text":"","code":"install.packages(\"devtools\") # if devtools is not installed devtools::install_github(\"kraskura/AnalyzeResp\") library(AnalyzeResp)"},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"done-once-set-up-analysis-working-directory-space","dir":"Articles","previous_headings":"Setup","what":"2. (done once) Set up analysis working directory space","title":"Step by step example of analysis","text":"Using functions, produce save locally many .csv .png files. Currently, two options: current working directory (folder user’s computer). various folders automatically organised (suggested). setup current working directory subfolders run following code: Note! rename folders. Much agreed names folders intuitive current version. Suggestions alternative names export files, directories, sub-directories always welcome Outcome","code":"organizeAnalysisLocally(create = \"Full\") # will create a full suite of folders and subfolders within in prep to analyze SMR, MMR, AAS"},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"done-once-transition-from-raw-data--txt-files-to--csv-files","dir":"Articles","previous_headings":"Setup","what":"3. (done once) Transition from raw data .txt files to .csv files","title":"Step by step example of analysis","text":"location raw files: root working directory. execute code: data files .txt (Firesting oxygen meter) .csv (Witrox) format raw form. functions package processes .csv files contain values relevant analysis (e.g., O2, temperature, time). MMR_SMR_AS_EPOC calculates metabolic rates mgO2 L^-1 kg^-1. oxygen level unit raw data files mgO2 L^-1, require conversion. Common conversion: air saturation % (%) mgO2 L^-1 Similarly, also see similar modification: FishResp::conver.rMR Suggesting writing loop efficiency (see code example ) Outcomes: original non-modified .txt file remains current working directory. .txt files can now moved elsewhere used consecutive steps. new file extension ’_convereted.csv” moved csv_files folder.","code":"# For Witrox  textFileConvert(txt_file = \"NAME_OF_RAW_TEXTFILE.txt\",                 local_path = FALSE,                 type_file = \"Witrox\",                 N_Ch = 4,                 nrowSkip = 41, # witrox software 2023                  convert_units = T,                 units_from = \"pct\", # O2 units from % AS                 units_to = \"mg/L\", # O2 units to mg/L                 salinity = 0,                 atm_pressure = 1)  # example for 'older' Firesting:  textFileConvert(txt_file = \"NAME_OF_RAW_TEXTFILE.txt\",                 local_path = FALSE,                 type_file = \"Firesting_pre2023\",                 N_Ch = 4,                 nrowSkip = 19, # pyroscience old software                  convert_units = T,                 units_from = \"pct\", # O2 units from % AS                 units_to = \"mg/L\", # O2 units to mg/L                 salinity = 0,                 atm_pressure = 1)                  # For Firesting after 2023 update textFileConvert(txt_file = \"NAME_OF_RAW_TEXTFILE.txt\",                 local_path = FALSE,                 type_file = \"Firesting_2023\",                 N_Ch = 4,                 nrowSkip = 70, #                  convert_units = T,                 units_from = \"pct\", # O2 units from % AS                 units_to = \"mg/L\", # O2 units to mg/L                 salinity = 0,                 atm_pressure = 1)"},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"using-mmr-function","dir":"Articles","previous_headings":"","what":"Using MMR function","title":"Step by step example of analysis","text":"following script obtain oxygen decrease rates time user-specified measurement cycle. code analyzes MMR 4 individuals, associated one probe = channel FireSting oxygen sensor (FireSting boxes). MMR data file contains less 3 min data, iterative “sliding window” analysis find steepest slope representing MMR measurement performed. Otherwise, always calculates regression parameters provided duration measurement.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"first-mmr-analysis-run","dir":"Articles","previous_headings":"Using MMR function","what":"1. First MMR analysis run","title":"Step by step example of analysis","text":"Outcomes:","code":"MMR(data.MMR = \"NAME_OF_DATA_converted.csv\", # specify the .csv data file     cycles = 2,  # this file has two measurement (closed phase) cycles     cycle_start = c(0, 11.02), # first cycle start at 0 min, and 2nd cycle starts at 11.2 min (relative time of the file)     cycle_end = c(4.0, 15.95), # first cycle ends at 4 min, and 2nd cycle ends at 15.95 min (relative time of the file)     mmr_Ch1 = 1, # an animal in channel 1 has the MMR measured in the first cycle.      mmr_Ch2 = 2, # an animal in channel 2 has the MMR measured in the second cycle.      mmr_Ch3 = 1, # an animal in channel 3 has the MMR measured in the first cycle.      mmr_Ch4 = 2, # an animal in channel 4 has the MMR measured in the second cycle.      clean_Ch1=c(0,0), # channel specific timeframes for the MMR measurement     clean_Ch2=c(0,0),      clean_Ch3=c(0,0),     clean_Ch4=c(0,0),     local_path = TRUE, # this will automatically save output files in the dedicated output folders     N_Ch = 4, # 4 channel firesting, 1 temperature probe     inv.data = NA) # no inventory data to perform more detailed user-defined measurement adjustments."},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"plot-1-","dir":"Articles","previous_headings":"Using MMR function > 1. First MMR analysis run","what":"plot 1.","title":"Step by step example of analysis","text":"one figure produced per individual first panel always full duration trend presented, shaded section shows user-indicated MMR section plot labeled MMR (second panel) colored slopes steepest ) 120 s (green), ii) 90 s (orange), iii) 60 s (purple); black regression full duration _ regressions parameters full slopes noted plot _ (MMR) measurement cycle adjusted using ‘inventory file,’ indicated legend box (see third panel, cycle 2)","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"qc-mmr-optional","dir":"Articles","previous_headings":"Using MMR function","what":"2. QC MMR (optional)","title":"Step by step example of analysis","text":"MMR inventory channel-specific cleaning: use ? ‘cleaning details’ provided outlined csv file.  Description example image : Channel 3, -MMR measurement cycle 2 needs time-adjusted. entered filename matching exactly filename data file MMR function applied file, timeframe usable data channel 3, cycle 2 adjusted start time minute 30 end minute 40 (relative time data, assuming file begins time 0 min). Notes: sure format inventory file .csv inventory file located root working directory (location MMR, SMR, … folders).** clean actual MMR cycle (sliding slope section), use MMR arguments clean_Ch1, clean_Ch1, clean_Ch1, clean_Ch1 needed.  Now, run code inventory file:","code":"MMR(data.MMR = \"NAME_OF_DATA_converted.csv\", # specify the .csv data file     cycles = 2,  # this file has two measurement (closed phase) cycles     cycle_start = c(0, 11.02), # first cycle start at 0 min, and 2nd cycle starts at 11.2 min (relative time of the file)     cycle_end = c(4.0, 15.95), # first cycle ends at 4 min, and 2nd cycle ends at 15.95 min (relative time of the file)     mmr_Ch1 = 1, # an animal in channel 1 has the MMR measured in the first cycle.      mmr_Ch2 = 2, # an animal in channel 2 has the MMR measured in the second cycle.      mmr_Ch3 = 1, # an animal in channel 3 has the MMR measured in the first cycle.      mmr_Ch4 = 2, # an animal in channel 4 has the MMR measured in the second cycle.      clean_Ch1=c(0,0), # channel specific timeframes for the MMR measurement     clean_Ch2=c(0,0),      clean_Ch3=c(0,0),     clean_Ch4=c(0,0),     local_path = TRUE, # this will automatically save output files in the dedicated output folders     N_Ch = 4, # 4 channel firesting, 1 temperature probe     inv.data = \"NAME_OF_INV_DATA.csv\") # no inventory data to perform more detailed user-defined measurement adjustments."},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"using-smr-function","dir":"Articles","previous_headings":"","what":"Using SMR function","title":"Step by step example of analysis","text":"Two runs SMR function data file may necessary. Parametrized run get files visual assessment measurement’s quality. Parametrized run apply time adjustments cleaning, decided visual assessment data.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"first-run-a-parametrized-run-of-smr-without-any-qc","dir":"Articles","previous_headings":"Using SMR function","what":"1. First run: A parametrized run of SMR without any QC","title":"Step by step example of analysis","text":"rate oxygen decrease (O2 levels ~ time; e.g., mgO2 min^-1) automatically isolated measurement cycles. example code : + full respirometry cycle (flush:measure) length 15 min long: cycle_end=15 + 8-minute flush: cycle_start=8 + None measurement cycles modified otherwise cleaned (inventory data): inventory_data=NA + first 10 s measurement (closed) discarded “wait period” water mixing: chop_start=10/60 (see notes ) additional wait period can used flush measurement (flush:wait:measure) Rosewarne et al 2016, See Fig 3. provided example, first 10 seconds equivalent wait period excluded regression analysis. Outcomes:","code":"SMR(data=\"FILENAME_SMR_converted.csv\",     inventory_data=NA,     cycle_start=8, # length of the flush (min 0 - 8 relative time for each measurement cycle)     cycle_end=15, # length of a full cycle, with open and closed phases together     chop_start=10/60, # this will take the first 10 sec off as a waiting period. It can be decimal     chop_end=0,     N_Ch=4,     local_path=TRUE)"},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"plot-2-","dir":"Articles","previous_headings":"Using SMR function > 1. First run: A parametrized run of SMR without any QC","what":"plot 2.","title":"Step by step example of analysis","text":"One figure produce channel. Red line: linear regression slope Regressions parameters full slopes noted plot Time relative scale, assuming file begins time 0 panels top bottom: Channel 1 O2 trend, channel 2 O2 trend, channel 3 O2 trend, channel 4 O2 trend, temperature trend (scale set 5- 35ºC)] solid red line: mean O2 levels system trial dashed line: lowest reached O2 levels system trial Channel data, shows straight line zero","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"qc-smr-optional","dir":"Articles","previous_headings":"Using SMR function","what":"2. QC SMR (optional)","title":"Step by step example of analysis","text":"SMR inventory channel-specific cleaning: use ? MMR, cleaning details provided csv file.  Now run SMR function . addition inventory data file (.csv format). inventory file must root working directory. Notes: cleaning necessary measurement cycle low R2. measurement cycles automatically excluded using MMR_SMR_AS_EPOC setting desired R2 thresholds ensuring automatized consistency Efficiency tip: writing editing inventory file excel (.xlsx), transfer necessary part new file .csv format date must written name .csv file. exclude cycle indicate start end times slope 0 0 errors cleaning due typos Outcomes:","code":"SMR(data=\"FILENAME_converted.csv\",       inventory_data= \"smr_inventory_test.csv\", # <<< Added after visual assessment of the data       cycle_start=8,        cycle_end=15,        chop_start=10/60,       chop_end=0,       flush_plot=\"OFF\",       N_Ch=4,       path=\"UseFolders\",       date_format = \"m/d/y\")"},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"plot-3-","dir":"Articles","previous_headings":"Using SMR function > 2. QC SMR (optional)","what":"plot 3.","title":"Step by step example of analysis","text":"One figure channel plotted . time annotation adjustments according cleaning guidelines: grey shaded sections indicates sections approved acceptable analysis, representative animal O2 uptake rate measurement. red frame message: measurements excluded entirely final data analysis orange frame: measurements, cleaned low R2, used bring awareness quality scatter data","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"background-respiration","dir":"Articles","previous_headings":"Using SMR function","what":"3.Background respiration","title":"Step by step example of analysis","text":"background respiration run automatic repeat cycles (similar overnight resting metabolic rate measurements), can easily analysed using SMR function (parametrize accordingly). possibility use MMR function custom cycle times. background run ocntinuous flushing, can analyzed using SMR funciton; just sure make flush cycles really short (e.g., one minute)","code":""},{"path":[]},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"fully-parametrized-run","dir":"Articles","previous_headings":"Using MMR_SMR_AS_EPOC","what":"1. Fully parametrized run","title":"Step by step example of analysis","text":"Examples explanations setting various parameter values code : regression R2 cut 0.9 MMR (r2_threshold_mmr = 0.9) regression R2 cut 0.85 SMR (r2_threshold_smr  = 0.85). length sufficient keep R2 chosen 0.9 level, automatically go next longer sliding window option (case, 180 seconds). goal keep R2 set threshold providing longest possible MMR measurement period epoc_threshold = 1.1: time full recovery estimated time takes animal recover MMR level 110% SMR. (= 1.1 X SMR). recovMMR_threshold = 0.5: finds time takes metabolic costs animal recover MMR 50% MMR (EPOC 50% MMR time 50 % MMR) drop_ch = 1: channel 1 entirely excluded analysis scaling_exponent_smr = 0.89: scaling SMR (data.SMR) values corrected common mass using 0.89 scaling exponent (default 1 kg, can specified using common_mass arg). scaling_exponent_mmr = 1: isometric scaling MMR measurement end_EPOC_Ch = c((4.5*60), NA, NA, (5*60)): manually assigned time (minutes) took animal recover, assigned channel individually (Channel-1 = 4.5 hours, channel-4 = 5 hours, specified channel-2 channel-3). spars_levels = c(0.1, 0.3): smoothing level estimating recovery costs, least smooth (0.1) mildly smooth (0.3) trends plotted. “spar” unitless, somewhat arbitrary sense. example, background respiration measured trial, background files provided (see step 4).","code":"MMR_SMR_AS_EPOC(     data.MMR = \"jul04_2019_opasize_box4_mmr_analyzed.csv\",     data.SMR = \"jul04_2019_opasize_box4_smr_analyzed.csv\",     AnimalID = c(\"FISH1\",\"FISH2\",\"FISH3\",\"FISH4\"),     BW.animal = c(0.065,0.068,0.061,0.062),     resp.V = c(1.9,1.9,1.5,1.5),     r2_threshold_smr = 0.85,     r2_threshold_mmr = 0.9,     scaling_exponent_mmr = 1,     scaling_exponent_smr = 0.89,     epoc_threshold = 1.1,     drop_ch = 1,     recovMMR_threshold = 0.5,     plot_smr_quantile=10,      mo2_val_for_calc = \"mo2_1kg\", # options: \"mo2_1kg\", mo2_common_mass_kg, mo2_per_individual_kg     end_EPOC_Ch = c((4.5*60), NA, NA, (5*60)), # must match the N(channels), use NA otherwise, input in minutes     # mmr_type = \"mean\",     min_length_mmr = 120,     spars_levels = c(0.1, 0.3),     background_prior = \"BAKCGROUND_DATA_BEFORE_MR_analyzed.csv\" ,     background_post = \"BAKCGROUND_DATA_AFTER_MR_analyzed.csv\" ,     background_slope = NULL,     background.V = NULL,     MLND=TRUE,     match_background_Ch = TRUE,     mmr_background = \"SAME_slope\",     background_linear_gr = TRUE,     local_path= FALSE,     N_Ch = 4,      common_mass= 1) # in kg"},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"minimally-parametrized-mmr_smr_as_epoc-run","dir":"Articles","previous_headings":"Using MMR_SMR_AS_EPOC","what":"2. Minimally parametrized MMR_SMR_AS_EPOC run","title":"Step by step example of analysis","text":"","code":"MMR_SMR_AS_EPOC( data.MMR = \"FILENAME_MMR_converted_analyzed.csv\",       data.SMR = \"FILENAME_SMR_converted_analyzed.csv\",       AnimalID = c(\"ANIMAL1\",\"ANIMAL2\",\"ANIMAL3\",\"ANIMAL4\"),       BW.animal = c(0.065,0.068,0.061,0.062),       resp.V = c(1.890,1.890,1.4475,1.4475),       r2_threshold_smr = 0.85,       r2_threshold_mmr = 0.9,       min_length_mmr = 120,       local_path = FALSE)"},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"other-occasions-and-notes","dir":"Articles","previous_headings":"Using MMR_SMR_AS_EPOC","what":"3. Other occasions and notes:","title":"Step by step example of analysis","text":"MMR_SMR_AS_EPOC can run estimate SMR. Specify, data.MMR = \"none\". See documentation MMR_SMR_AS_EPOC can run estimate MMR. Specify, data.SMR = \"none\". See documentation Outcomes:","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"plot-4-","dir":"Articles","previous_headings":"Using MMR_SMR_AS_EPOC > 3. Other occasions and notes:","what":"plot 4.","title":"Step by step example of analysis","text":"Metabolic rates across duration experiment particularly relevant estimating recovery performance (EPOC relevant metrics).  Figure identifier: “EPOC_PLOT.png” Number panels determined values provided spar_level argument first measurement trend MMR blue line connects dots according selected smoothness level (spar_level) colored horizontal lines show SMR estimates using 5 different methods Dashed pink: Time 50% MMR Dashed grey: hourly marks (1, 2, 3, 4, 5 h trial) Colored lines (overlapping image): estimate time EPOC according different types SMR","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"plot-5-","dir":"Articles","previous_headings":"Using MMR_SMR_AS_EPOC > 3. Other occasions and notes:","what":"plot 5.","title":"Step by step example of analysis","text":"Metabolic rates across duration experiment. figure highlights MO2 measurements used estimate SMR/RMR, find resting level metabolic rates.  Figure identifier: “_SMR_PLOT_SMR_analyses” One facet channel Discarded channels plot plotted channel ID grey bar right side Red symbols: 5 lowest values reported Green symbols: excluding lowest 5 MO2 values (red) lowest 10 MO2 values (.e., lowest 6-15 values) Turquoise: lowest 10th percentile MO2 values Turquoise + Blue: lowest 15th percentile MO2 values Purple + Turquoise + Blue: lowest 20th percentile MO2 values","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/articles/Example_run.html","id":"plot-6-","dir":"Articles","previous_headings":"Using MMR_SMR_AS_EPOC > 3. Other occasions and notes:","what":"plot 6.","title":"Step by step example of analysis","text":"comparison estimated SMR/ RMR values using different methods:  Figure identifier: “SMR_PLOT_SMR_methodsALL.png” Channels plotted different colors Number bubble Number MO2 values used calculations SMR_low(n^th)quantile: SMR value estimated mean lowest recorded values nth quantile (10, 15, 20th quantile) (plot , bottom panel, mean colored values) SMR_mean10minValues: mean 10 min lowest MO2 values, excluding lowest 5. (Figure , top panel, green symbols) SMR_mlnd: SMR estimated following methods Chabot et al 2016, mean lowest normal distribution information, see Chabot et al 2016, method estimate SMR described detail.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kraskura K (2024). AnalyzeResp: Analyze Oxygen Uptake Rate data Aquatic Animals. R package version 0.0.1, https://kraskura.github.io/AnalyzeResp/.","code":"@Manual{,   title = {AnalyzeResp: Analyze Oxygen Uptake Rate data in Aquatic Animals},   author = {Krista Kraskura},   year = {2024},   note = {R package version 0.0.1},   url = {https://kraskura.github.io/AnalyzeResp/}, }"},{"path":"https://kraskura.github.io/AnalyzeResp/index.html","id":"analyzeresp","dir":"","previous_headings":"","what":"Analyze Oxygen Uptake Rate data in Aquatic Animals","title":"Analyze Oxygen Uptake Rate data in Aquatic Animals","text":"project currently updated.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"Analyze Oxygen Uptake Rate data in Aquatic Animals","text":"development version AnalyzeResp can installed GitHub : older version code shared users one R script","code":"install.packages(\"devtools\") # if devtools is not installed devtools::install_github(\"kraskura/AnalyzeResp\") library(AnalyzeResp)"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates regressions for MMR. — MMR","title":"Estimates regressions for MMR. — MMR","text":"Analyzes O~2~ temperature data recorded obtain regressions representative individual's maximum metabolic rate. function can handle 4 measurement cycles.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates regressions for MMR. — MMR","text":"","code":"MMR(   data.MMR,   cycles,   cycle_start,   cycle_end,   mmr_Ch1 = 0,   mmr_Ch2 = 0,   mmr_Ch3 = 0,   mmr_Ch4 = 0,   clean_Ch1 = c(0, 0),   clean_Ch2 = c(0, 0),   clean_Ch3 = c(0, 0),   clean_Ch4 = c(0, 0),   N_Ch = 4,   local_path = TRUE,   date_format = c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"),   inventory_data = NULL )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates regressions for MMR. — MMR","text":"data.MMR name raw input file; .csv, character. cycles number measurement cycles recording metabolic rate animal (single number value 1 4). cycle_start numeric vector measurement cycle start times (min). length vector equal number cycles provided, e.g. cycles = 2, may cycle_start = c(0,10)) cycle_end numeric vector measurement cycle end times (min). format cycle_start mmr_Ch1 number indicated cycle animal oxygen meter Channel 1 expected reach maximum metabolic rate. Must specify analyze metabolic rate, enter 0, drop channel analysis. mmr_Ch2 See mmr_Ch1 argument description. applies Channel 2 mmr_Ch3 See mmr_Ch1 argument description. applies Channel 3 mmr_Ch4 See mmr_Ch1 argument description. applies Channel 4 clean_Ch1 Specific MMR cycle animal (cycle). Use set time window (min) specifies quality section metabolic rate measurement sliding window analysis. Default use full length measurement cycle set cycle_start cycle_end arguments. clean_Ch2 See mmr_Ch1 argument description. applies Channel 2 clean_Ch3 See mmr_Ch1 argument description. applies Channel 3 clean_Ch4 See mmr_Ch1 argument description. applies Channel 4 N_Ch number oxygen temperature channels. Options include 2, 4, 8. argument can ignored 2-Channel oxygen meter used. local_path Logical. TRUE (default) returned files saved local working directory. date_format date format used original files. Must specify one following: c(\"m/d/y\",\"d/m/y\",\"y-m-d\") inventory_data name inventory data dataframe provides details \"cleaning\" requirements","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates regressions for MMR. — MMR","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":null,"dir":"Reference","previous_headings":"","what":"estimates indivudal specific metabolic rates and recovery — MMR_SMR_AS_EPOC","title":"estimates indivudal specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"Estimates aerobic metabolic performances animals: MMR, SMR, EPOC (recovery), Absolute Aerobic Scope. Relies outputs SMR MMR functions","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimates indivudal specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"","code":"MMR_SMR_AS_EPOC(   data.MMR = NULL,   data.SMR = NULL,   AnimalID,   BW.animal,   resp.V,   r2_threshold_smr,   r2_threshold_mmr,   min_length_mmr,   scaling_exponent_mmr = 1,   scaling_exponent_smr = 1,   common_mass = 1,   mo2_val_for_calc = \"mo2_1kg\",   plot_smr_quantile = 15,   date_format = c(\"%Y-%m-%d %H:%M:%S\", \"GMT\"),   N_Ch = 4,   drop_ch = NULL,   MLND = TRUE,   verbose.MLND = FALSE,   calc_EPOC = TRUE,   epoc_threshold = 1,   recovMMR_threshold = 0.5,   end_EPOC_Ch = c(NA, NA, NA, NA),   background_prior = NULL,   background_post = NULL,   background_slope = NULL,   background_slope_mmr = NULL,   background.V = NULL,   background_gr = NULL,   match_background_Ch = FALSE,   mmr_background = \"trial_mean\",   local_path = TRUE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimates indivudal specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"data.MMR name MMR data file (“…analyzed.csv”; character string); output file MMR function. data.SMR name SMR data file (“…analyzed.csv”; character string); output file SMR function. AnimalID Indicates individual ID; must vector 4 characters. missing, enter \"NA\" BW.animal Indicates individual mass; must vector 4 characters. missing, enter \"0\" resp.V Indicates volume (L) respirometery chambers; must vector 4 numbers (e.g., c(1, 1, 1, 1), four 1-L respirometers) r2_threshold_smr R2 threshold SMR, measurements threshold excluded r2_threshold_mmr R2 threshold MMR, measurements threshold excluded min_length_mmr duration MMR steepest slope measurement; 180, 120, 90, 60 seconds (s) scaling_exponent_mmr Body mass scaling exponent correct MMR values body size. MR=aBM^b (MR = metabolic rate, BW = body mass, = scaling coefficient [intercept], b = scaling exponent [power term]) scaling_exponent_smr Body mass scaling exponent correct SMR values body size. MR=aBM^b (MR = metabolic rate, BW = body mass, = scaling coefficient [intercept], b = scaling exponent [power term]) common_mass Metabolic performances often calculated per unit mass. Use argument define standardized mass . (default MO2 mgO2kg-1^ min-1^, common mass 1 kg). Units = kg mo2_val_for_calc Units metabolic rates represented export figures. mo2_common_mass_kg (standardized MO2 1 kg fish using scaling exponents provided; mg O2 min-1 kg-1), mo2_individual_kg (MO2 whole individual, mgO2 min-1) plot_smr_quantile Indicating percentile lower MO2 values plot; must either 10, 15, 20 date_format date format used original data files. Argument passed strptime. default c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"). N_Ch number channels oxygen meter. must either 4 8 (8 channem meter 4 oxygen probes 4 temperature probes) drop_ch Indicates channel dropped entirely excluded analysis. Must numerical vector, e.g., c(1,3) MLND Logical argument. TRUE, SMR estimated also using Mean Lowest Normal Distribution analysis. details Chabot et al 2016 verbose.MLND MLND: logical controlling text progress bar MLND displayed fitting procedure. (see 'verbose' mclust package functions). calc_EPOC Logical. SMR MMR files provided, indicate whether evaluate recovery (.e. EPOC, hourcly recovery, etc.) epoc_threshold Indicates threshold relevant individual’s SMR calculate end time recovery (time metabolic rate returned epoc_threshold). default SMR level (1; 100 percent SMR). use 120 percent SMR recovery threshold, enter epoc_threshold = 1.2. recovMMR_threshold Short-term recovery threshold relevant individual’s MMR. Indicates (percent) level MMR calculate recovery indices. default indicates 50 percent MMR, e.g., time takes recover 50 percent MMR (default). Enter 0.3 30 percent MMR, 0.8 80 percent MMR) end_EPOC_Ch Manually assigned end time (min) full recovery (EPOC). time can assigned channel independently; use numerical vector 4 variables, one channel (e.g., c(120, 120, NA, 180), 2 h, 2h, SMR level, 3 h EPOC end times, respectively) background_prior name analyzed background “…analyzed.csv” file, output file SMR function (respiration empty respirometer measured respirometry trial). background_post background_prior, post respirometry trial background_slope Manually assigned background slope used correct metabolic rate individuals. Provide numeric value mgO2 L-1 h-1 background_slope_mmr Manually assigned background slope used correct MMR individuals. Provide numeric value mgO2 L-1 h-1 background.V Manually assigned respirometer volumes (L). vector 4 numeric variables, one channel. background_gr Specify whether assume bacterial growth (thus respiration rates) changed linearly exponentially across duration respirometry trial. Must specify either \"linear\" \"exp\": metabolic rate values across given trial corrected using estimated background values indicated growth curve. background_prior background_post must provided enable . match_background_Ch Logical. TRUE, background respiration estimated applied channel-specific. background_prior background_post used estimate background respiration specific channel (individual), used correct individual’s MO2 independently. default, mean background respiration rate channels calculated applied correct individual’s MO2 mmr_background Specifies background value used correct MMR value. Options: ) \"back_prior\" takes background respiration rate value estimated background_prior file , ii)\"trial_mean\" takes background respiration rate value applied entire trial (MMR SMR, indistinguishable), iii) \"back_gr\", iv) defined respiration rate value mgO2 L-1 h-1. local_path Logical. TRUE (default) returned files saved local working directory.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"estimates indivudal specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":null,"dir":"Reference","previous_headings":"","what":"estimates regressions for SDA (digestion) measurements — SDA","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"Estimates metabolic performances associated digestion (SDA refers specific dynamic action, digestion costs). (updates progress)","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"","code":"SDA(   AnimalID,   BW.animal,   resp.V,   r2_threshold_smr,   sda_threshold_level,   scaling_exponent_smr = 1,   date_format = c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"),   data.SDA = NULL,   analyzed_MR = NULL,   SMR_calc = TRUE,   SMR_vals = c(NULL, NULL, NULL, NULL),   drop_ch = NULL,   N_Ch = 4,   end_SDA_Ch = NA,   MLND = TRUE,   verbose.MLND = FALSE,   background_prior = NULL,   background_post = NULL,   background_slope = NULL,   background.V = NULL,   match_background_Ch = FALSE,   background_gr = NULL,   local_path = TRUE,   handling_delay = c(0, 0, 0, 0),   begin_smr_hr_zero = FALSE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"AnimalID Indicates individual ID; must vector 4 characters. missing, enter \"NA\" BW.animal Indicates individual mass; must vector 4 characters. missing, enter \"0\" resp.V Indicated volume (L) respirometry chambers; must vector 4 numbers (e.g., c(1, 1, 1, 1), four 1-L respirometers) r2_threshold_smr R2 threshold SMR, measurements threshold excluded sda_threshold_level Indicates threshold relevant individuals SMR calculate end time recovery (time metabolic rate returned sda_threshold). default SMR level (1; 100 percent SMR). use 120 percent SMR threshold full digestion, enter sda_threshold = 1.2. scaling_exponent_smr Body mass scaling exponent correct SMR values body size. MR=aBM^b (MR = metabolic rate, BW = body mass, = scaling coefficient [intercept], b = scaling exponent [power term]) date_format date format used original FireSting data files. Must specify one following: \"m/d/y\", \"d/m/y\", \"y-m-d\" data.SDA name SDA data file (“…analyzed.csv”; character string); output file SMR function. analyzed_MR name data file estimated SMR values SMR_calc Logical, indicates whether calculate SMR present data trend SMR_vals allows user input SMR values drop_ch Indicates channel dropped entirely excluded analysis. Must numerical vector, e.g., c(1,3) N_Ch number channels FireSting. must either 4 8. end_SDA_Ch Manually assigned end time (min) digestion (SDA). time can assigned channel independently; use numerical vector 4 variables, one channel (e.g., c(120, 120, NA, 180), 2 h, 2h, SMR level, 3 h SDA end times, respectively) MLND Logical argument. TRUE, SMR estimated also using Mean Lowest Normal Distribution analysis. details Chabot et al 2016. verbose.MLND MLND: logical controlling text progress bar MLND displayed fitting procedure. (see 'verbose' mclust package functions). background_prior name analyzed background “…analyzed.csv” file, output file SMR function (respiration empty respirometer measured respirometry trial). background_post background_prior, post respirometry trial background_slope Manually assigned background slope used correct metabolic rate individuals. Provide numeric value mgO2 L-1 h-1v background.V Manually assigned respirometry chamber volumes (L). vector 4 numeric variables, one channel. match_background_Ch Logical. TRUE, background respiration estimated applied channel-specific. background_prior background_post used estimate background respiration specific channel (individual), used correct individual’s MO2 independently. default, mean background respiration rate channels calculated applied correct individual’s MO2 background_gr Specify whether assume bacterial growth (thus respiration rates) changed linearly exponentially across duration respirometry trial. Must specify either \"linear\" \"exp\": metabolic rate values across given trial corrected using estimated background values indicated growth curve. background_prior background_post must provided enable . local_path Logical. TRUE (default) returned files saved local working directory. handling_delay delay SDA due handling, anesthesia, experimental factor. hours begin_smr_hr_zero logical. Whether force integral SDA costs still calculated hour 0, assumed SMR level (refer sda_threshold_level)","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates regressions for automatically timed measurement cycles — SMR","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"Analyzes O~2~ temperature data recorded continuously using repeat open(flush):closed(measure) cycles obtain regressions representative metabolic rates.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"","code":"SMR(   data,   cycle_start,   cycle_end,   first_cycle,   chop_start,   chop_end,   N_Ch = 4,   date_format = c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"),   inventory_data = NULL,   local_path = TRUE,   plot_temp = FALSE,   background_data = FALSE,   sda_data = FALSE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"data name raw input file .csv, character. cycle_start stat time (min) auto cycle. indicates start measurement (relative min 0). cycle_end time (min) auto cycle; end measurement (relative min 0) first_cycle whether first cycle flush metabolic rate measurement. provide either: \"flush\" \"measurement\" chop_start time (min) chopped start measurement cycle chop_end time (min) chopped end measurement cycle N_Ch number channels oxygen meter. must either 4 8. 8-Channel oxygen meter 4 temperature 4 oxygen sensors date_format Common format CSV conversion. inventory_data inventory file (.csv file), default = NULL local_path Logical. TRUE (default) returned files saved local working directory. plot_temp Logical argument. Indicates whether temperature trends cycle plotted saved    TRUE background_data logical. datafile background (background respiration file), indicate TRUE sda_data logical. datafile belong SDA analysis, SDA data file, indicate TRUE","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":null,"dir":"Reference","previous_headings":"","what":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"Creates collection local directories help organizing analysis exporting output files specific folders associated metabolic performance function (required smooth data analysis).","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"","code":"organizeAnalysisLocally(   SMR.folder = TRUE,   MMR.folder = TRUE,   SDA.folder = TRUE,   MMR_SMR_AS_EPOC.folder = TRUE,   BACK_RESP.folder = TRUE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"SMR.folder create local SMR folder, default = TRUE MMR.folder create local MMR folder, default = TRUE SDA.folder create local SDA folder, default = TRUE MMR_SMR_AS_EPOC.folder create local MMR_SMR_AS_EPOC.folder, default = TRUE BACK_RESP.folder create local BACK_RESP.folder, default = TRUE","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":null,"dir":"Reference","previous_headings":"","what":"steepest slope analysis — slidingSlope","title":"steepest slope analysis — slidingSlope","text":"Estimates slopes every time iteration (often second), pulls steepest 30 s, 60 s, 90 s, 180 s slopes, well regression slope entire recorded duration.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"steepest slope analysis — slidingSlope","text":"","code":"slidingSlope(data, Ch, local_path, N_Ch)"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"steepest slope analysis — slidingSlope","text":"data Dataframe measurement present (O2 observed second ) Ch Channel needs analyzed (use format: c(1, 2), c(3), etc. 4 channels) local_path Logical. TRUE (default) returned files saved local working directory. Can also provide path function run independently N_Ch Number channels oxygen meter","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"steepest slope analysis — slidingSlope","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":null,"dir":"Reference","previous_headings":"","what":"filters and converts raw data files — textFileConvert","title":"filters and converts raw data files — textFileConvert","text":"Uses convert format (strip unused columns rows) raw '.txt' data file produce .csv file required `MMR` `SMR` functions.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filters and converts raw data files — textFileConvert","text":"","code":"textFileConvert(   txt_file,   type_file,   nrowSkip = NULL,   N_Ch = 4,   local_path = TRUE,   exclude_first_measurement_s = 0,   convert_units = FALSE,   units_from = NULL,   units_to = NULL,   channels = c(1, 2, 3, 4),   salinity = 0,   atm_pressure = 1,   temperature = NULL )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filters and converts raw data files — textFileConvert","text":"txt_file name original “.txt” file FireSting type_file Indicates type software used record raw data, options: \"Firesting_pre2023\", \"Firesting_2023\", \"Witrox\" nrowSkip number rows skip default work; argument 'type_file' determines default N rows skip \"Firesting_pre2023\" = 19, \"Firesting_2023\" = 70, \"Witrox\" = 41; rows raw txt file often contain calibration information, IDs probes user defined settings N_Ch number FireSting channels. Options include 2, 4, 8. 2-channel FireSting used, argument ignored, enter 4 local_path Logical. TRUE (default) returned files saved local working directory. exclude_first_measurement_s number measurement point excluded beginning file (addition nrowSkip argument) convert_units Logical (FALSE = default). true, function passed rMR function .unit.convert convert O2 content units. units_from default NULL, options:\"mg/L\", \"PP\", \"pct\". passed rM::.unit.convert arg. .units.units_to = default NULL, options:\"mg/L\", \"PP\", \"pct\". passed rM::.unit.convert arg. .units.channels = c(1,2,3,4), indicate channels apply conversion salinity = 0, passed rM::.unit.convert arg. salinity (must \"pp.thou\") atm_pressure = 1, passed rM::.unit.convert arg. bar.press (must \"atm\") temperature user set consistent temperature channels (ºC)","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filters and converts raw data files — textFileConvert","text":"output print","code":""}]
