[{"path":"https://kraskura.github.io/AnalyzeResp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kraskura K (2024). AnalyzeResp: Analyze Oxygen Uptake Rate data Aquatic Animals. R package version 0.0.1, https://kraskura.github.io/AnalyzeResp/.","code":"@Manual{,   title = {AnalyzeResp: Analyze Oxygen Uptake Rate data in Aquatic Animals},   author = {Krista Kraskura},   year = {2024},   note = {R package version 0.0.1},   url = {https://kraskura.github.io/AnalyzeResp/}, }"},{"path":"https://kraskura.github.io/AnalyzeResp/index.html","id":"analyzeresp","dir":"","previous_headings":"","what":"Analyze Oxygen Uptake Rate data in Aquatic Animals","title":"Analyze Oxygen Uptake Rate data in Aquatic Animals","text":"project currently updated.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"Analyze Oxygen Uptake Rate data in Aquatic Animals","text":"development version AnalyzeResp can installed GitHub : older version code shared users one R script","code":"install.packages(\"devtools\") # if devtools is not installed devtools::install_github(\"kraskura/AnalyzeResp\") library(AnalyzeResp)"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates regressions for MMR. — MMR","title":"Estimates regressions for MMR. — MMR","text":"Analyzes O~2~ temperature data recorded obtain regressions representative individual's maximum metabolic rate. function can handle 4 measurement cycles.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates regressions for MMR. — MMR","text":"","code":"MMR(   data.MMR,   cycles,   cycle_start,   cycle_end,   mmr_Ch1 = 0,   mmr_Ch2 = 0,   mmr_Ch3 = 0,   mmr_Ch4 = 0,   clean_Ch1 = c(0, 0),   clean_Ch2 = c(0, 0),   clean_Ch3 = c(0, 0),   clean_Ch4 = c(0, 0),   N_Ch = 4,   local_path = TRUE,   date_format = c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"),   inventory_data = NULL )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates regressions for MMR. — MMR","text":"data.MMR name raw input file; .csv, character. cycles number measurement cycles recording metabolic rate animal (single number value 1 4). cycle_start numeric vector measurement cycle start times (min). length vector equal number cycles provided, e.g. cycles = 2, may cycle_start = c(0,10)) cycle_end numeric vector measurement cycle end times (min). format cycle_start mmr_Ch1 number indicated cycle animal oxygen meter Channel 1 expected reach maximum metabolic rate. Must specify analyze metabolic rate, enter 0, drop channel analysis. mmr_Ch2 See mmr_Ch1 argument description. applies Channel 2 mmr_Ch3 See mmr_Ch1 argument description. applies Channel 3 mmr_Ch4 See mmr_Ch1 argument description. applies Channel 4 clean_Ch1 Specific MMR cycle animal (cycle). Use set time window (min) specifies quality section metabolic rate measurement sliding window analysis. Default use full length measurement cycle set cycle_start cycle_end arguments. clean_Ch2 See mmr_Ch1 argument description. applies Channel 2 clean_Ch3 See mmr_Ch1 argument description. applies Channel 3 clean_Ch4 See mmr_Ch1 argument description. applies Channel 4 N_Ch number oxygen temperature channels. Options include 2, 4, 8. argument can ignored 2-Channel oxygen meter used. local_path Logical. TRUE (default) returned files saved local working directory. date_format date format used original files. Must specify one following: c(\"m/d/y\",\"d/m/y\",\"y-m-d\") inventory_data name inventory data dataframe provides details \"cleaning\" requirements","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates regressions for MMR. — MMR","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":null,"dir":"Reference","previous_headings":"","what":"estimates individual specific metabolic rates and recovery — MMR_SMR_AS_EPOC","title":"estimates individual specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"Estimates aerobic metabolic performances animals: MMR, SMR, EPOC (recovery), Absolute Aerobic Scope. Relies outputs SMR MMR functions","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimates individual specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"","code":"MMR_SMR_AS_EPOC(   data.MMR = NULL,   data.SMR = NULL,   AnimalID,   BW.animal,   resp.V,   r2_threshold_smr,   r2_threshold_mmr,   min_length_mmr,   scaling_exponent_mmr = 1,   scaling_exponent_smr = 1,   common_mass = 1,   mo2_val_for_calc = \"mo2_1kg\",   plot_smr_quantile = 15,   date_format = c(\"%Y-%m-%d %H:%M:%S\", \"GMT\"),   N_Ch = 4,   drop_ch = NULL,   MLND = FALSE,   verbose.MLND = FALSE,   calc_EPOC = TRUE,   SMR_vals = c(NULL, NULL, NULL, NULL),   epoc_threshold = 1,   epoc_smoothing_level = c(0.1, 0.3),   recovMMR_threshold = 0.5,   end_EPOC_Ch = c(NA, NA, NA, NA),   background_prior = NULL,   background_post = NULL,   background_slope = NULL,   background_slope_mmr = NULL,   background.V = NULL,   background_gr = NULL,   match_background_Ch = FALSE,   mmr_background = \"trial_mean\",   local_path = TRUE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimates individual specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"data.MMR name MMR data file (“…analyzed.csv”; character string); output file MMR function. data.SMR name SMR data file (“…analyzed.csv”; character string); output file SMR function. AnimalID Indicates individual ID; must vector 4 characters. missing, enter \"NA\" BW.animal Indicates individual mass; must vector 4 characters. missing, enter \"0\" resp.V Indicates volume (L) respirometry chambers; must vector 4 numbers (e.g., c(1, 1, 1, 1), four 1-L respirometers) r2_threshold_smr R2 threshold SMR, measurements threshold excluded r2_threshold_mmr R2 threshold MMR, meaxsurements threshold excluded min_length_mmr duration MMR steepest slope measurement; 180, 120, 90, 60 seconds (s), use full length cycle add 1 scaling_exponent_mmr Body mass scaling exponent correct MMR values body size. MR=aBM^b (MR = metabolic rate, BW = body mass, = scaling coefficient [intercept], b = scaling exponent [power term]) scaling_exponent_smr Body mass scaling exponent correct SMR values body size. MR=aBM^b (MR = metabolic rate, BW = body mass, = scaling coefficient [intercept], b = scaling exponent [power term]) common_mass Metabolic performances often calculated per unit mass. Use argument define standardized mass . (default MO2 mgO2kg-1^ min-1^, common mass 1 kg). Units = kg mo2_val_for_calc Units metabolic rates represented export figures. mo2_common_mass_kg (standardized MO2 1 kg fish using scaling exponents provided; mg O2 min-1 kg-1), mo2_individual_kg (MO2 whole individual, mgO2 min-1) plot_smr_quantile Indicating percentile lower MO2 values plot; must either 10, 15, 20 date_format date format used original data files. Argument passed strptime. default c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"). N_Ch number channels oxygen meter. must either 4 8 (8 channel meter 4 oxygen probes 4 temperature probes) drop_ch Indicates channel dropped entirely excluded analysis. Must numerical vector, e.g., c(1,3) MLND Logical argument. TRUE, SMR estimated also using Mean Lowest Normal Distribution analysis. details Chabot et al 2016 verbose.MLND MLND: logical controlling text progress bar MLND displayed fitting procedure. (see 'verbose' mclust package functions). calc_EPOC Logical. SMR MMR files provided, indicate whether evaluate recovery (.e. EPOC, hourcly recovery, etc.) SMR_vals Channel specific SMR values EPOC calculations (mgO2/kg/min) epoc_threshold Indicates threshold relevant individual’s SMR calculate end time recovery (time metabolic rate returned epoc_threshold). default SMR level (1; 100 percent SMR). use 120 percent SMR recovery threshold, enter epoc_threshold = 1.2. epoc_smoothing_level specificy smoothing level EPOC function. Argument passed 'spar' smooth.spline function calculation. epoc_smoothing_level = 0 uses trapezpoid method. recovMMR_threshold Short-term recovery threshold relevant individual’s MMR. Indicates (percent) level MMR calculate recovery indices. default indicates 50 percent MMR, e.g., time takes recover 50 percent MMR (default). Enter 0.3 30 percent MMR, 0.8 80 percent MMR) end_EPOC_Ch Manually assigned end time (min) full recovery (EPOC). time can assigned channel independently; use numerical vector 4 variables, one channel (e.g., c(120, 120, NA, 180), 2 h, 2h, SMR level, 3 h EPOC end times, respectively) background_prior name analyzed background “…analyzed.csv” file, output file SMR function (respiration empty respirometer measured respirometry trial). background_post background_prior, post respirometry trial background_slope Manually assigned background slope used correct metabolic rate individuals. Provide numeric value mgO2 L-1 h-1 background_slope_mmr Manually assigned background slope used correct MMR individuals. Provide numeric value mgO2 L-1 h-1 background.V Manually assigned respirometer volumes (L). vector 4 numeric variables, one channel. background_gr Specify whether assume bacterial growth (thus respiration rates) changed linearly exponentially across duration respirometry trial. Must specify either \"linear\" \"exp\": metabolic rate values across given trial corrected using estimated background values indicated growth curve. background_prior background_post must provided enable . match_background_Ch Logical. TRUE, background respiration estimated applied channel-specific. background_prior background_post used estimate background respiration specific channel (individual), used correct individual’s MO2 independently. default, mean background respiration rate channels calculated applied correct individual’s MO2 mmr_background Specifies background value used correct MMR value. Options: ) \"back_prior\" takes background respiration rate value estimated background_prior file , ii)\"trial_mean\" takes background respiration rate value applied entire trial (MMR SMR, indistinguishable), iii) \"back_gr\", iv) defined respiration rate value mgO2 L-1 h-1. local_path Logical. TRUE (default) returned files saved local working directory.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/MMR_SMR_AS_EPOC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"estimates individual specific metabolic rates and recovery — MMR_SMR_AS_EPOC","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":null,"dir":"Reference","previous_headings":"","what":"estimates regressions for SDA (digestion) measurements — SDA","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"Estimates metabolic performances associated digestion (SDA refers specific dynamic action, digestion costs). (updates progress)","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"","code":"SDA(   AnimalID,   BW.animal,   resp.V,   r2_threshold_smr,   sda_threshold_level,   scaling_exponent_smr = 1,   date_format = c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"),   data.SDA = NULL,   analyzed_MR = NULL,   SMR_calc = TRUE,   SMR_vals = c(NULL, NULL, NULL, NULL),   drop_ch = NULL,   N_Ch = 4,   end_SDA_Ch = NA,   MLND = TRUE,   verbose.MLND = FALSE,   background_prior = NULL,   background_post = NULL,   background_slope = NULL,   background.V = NULL,   match_background_Ch = FALSE,   background_gr = NULL,   local_path = TRUE,   handling_delay = c(0, 0, 0, 0),   begin_smr_hr_zero = FALSE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"AnimalID Indicates individual ID; must vector 4 characters. missing, enter \"NA\" BW.animal Indicates individual mass; must vector 4 characters. missing, enter \"0\" resp.V Indicated volume (L) respirometry chambers; must vector 4 numbers (e.g., c(1, 1, 1, 1), four 1-L respirometers) r2_threshold_smr R2 threshold SMR, measurements threshold excluded sda_threshold_level Indicates threshold relevant individuals SMR calculate end time recovery (time metabolic rate returned sda_threshold). default SMR level (1; 100 percent SMR). use 120 percent SMR threshold full digestion, enter sda_threshold = 1.2. scaling_exponent_smr Body mass scaling exponent correct SMR values body size. MR=aBM^b (MR = metabolic rate, BW = body mass, = scaling coefficient [intercept], b = scaling exponent [power term]) date_format date format used original FireSting data files. Must specify one following: \"m/d/y\", \"d/m/y\", \"y-m-d\" data.SDA name SDA data file (“…analyzed.csv”; character string); output file SMR function. analyzed_MR name data file estimated SMR values SMR_calc Logical, indicates whether calculate SMR present data trend SMR_vals allows user input SMR values drop_ch Indicates channel dropped entirely excluded analysis. Must numerical vector, e.g., c(1,3) N_Ch number channels FireSting. must either 4 8. end_SDA_Ch Manually assigned end time (min) digestion (SDA). time can assigned channel independently; use numerical vector 4 variables, one channel (e.g., c(120, 120, NA, 180), 2 h, 2h, SMR level, 3 h SDA end times, respectively) MLND Logical argument. TRUE, SMR estimated also using Mean Lowest Normal Distribution analysis. details Chabot et al 2016. verbose.MLND MLND: logical controlling text progress bar MLND displayed fitting procedure. (see 'verbose' mclust package functions). background_prior name analyzed background “…analyzed.csv” file, output file SMR function (respiration empty respirometer measured respirometry trial). background_post background_prior, post respirometry trial background_slope Manually assigned background slope used correct metabolic rate individuals. Provide numeric value mgO2 L-1 h-1v background.V Manually assigned respirometry chamber volumes (L). vector 4 numeric variables, one channel. match_background_Ch Logical. TRUE, background respiration estimated applied channel-specific. background_prior background_post used estimate background respiration specific channel (individual), used correct individual’s MO2 independently. default, mean background respiration rate channels calculated applied correct individual’s MO2 background_gr Specify whether assume bacterial growth (thus respiration rates) changed linearly exponentially across duration respirometry trial. Must specify either \"linear\" \"exp\": metabolic rate values across given trial corrected using estimated background values indicated growth curve. background_prior background_post must provided enable . local_path Logical. TRUE (default) returned files saved local working directory. handling_delay delay SDA due handling, anesthesia, experimental factor. hours begin_smr_hr_zero logical. Whether force integral SDA costs still calculated hour 0, assumed SMR level (refer sda_threshold_level)","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SDA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"estimates regressions for SDA (digestion) measurements — SDA","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates regressions for automatically timed measurement cycles — SMR","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"Analyzes O~2~ temperature data recorded continuously using repeat open(flush):closed(measure) cycles obtain regressions representative metabolic rates.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"","code":"SMR(   data,   cycle_start,   cycle_end,   first_cycle,   chop_start,   chop_end,   N_Ch = 4,   date_format = c(\"%m/%d/%Y %H:%M:%S\", \"GMT\"),   inventory_data = NULL,   local_path = TRUE,   plot_temp = FALSE,   background_data = FALSE,   sda_data = FALSE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"data name raw input file .csv, character. cycle_start stat time (min) auto cycle. indicates start measurement (relative min 0). cycle_end time (min) auto cycle; end measurement (relative min 0) first_cycle whether first cycle flush metabolic rate measurement. provide either: \"flush\" \"measurement\" chop_start time (min) chopped start measurement cycle chop_end time (min) chopped end measurement cycle N_Ch number channels oxygen meter. must either 4 8. 8-Channel oxygen meter 4 temperature 4 oxygen sensors. microplate reader files 4 step. date_format Common format CSV conversion. inventory_data inventory file (.csv file), default = NULL local_path Logical. TRUE (default) returned files saved local working directory. plot_temp Logical argument. Indicates whether temperature trends cycle plotted saved    TRUE background_data logical. datafile background (background respiration file), indicate TRUE sda_data logical. datafile belong SDA analysis, SDA data file, indicate TRUE","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/SMR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates regressions for automatically timed measurement cycles — SMR","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/csvSplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to split to csv files for independent analyses. — csvSplit","title":"Function to split to csv files for independent analyses. — csvSplit","text":"Function split csv files independent analyses.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/csvSplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to split to csv files for independent analyses. — csvSplit","text":"","code":"csvSplit(   data,   split_data_name,   time_split,   date_format = c(\"%m-%d-%Y %H:%M:%S\", \"GMT\"),   split = FALSE,   N_Ch = 4 )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/csvSplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to split to csv files for independent analyses. — csvSplit","text":"data data file needs split (raw file .txt/.xlsx/.csv conversion data-analysis csv file) split_data_name unique names string new files (two files split indicated time) time_split Time split happen (minutes) date_format Common format CSV conversion. split Logical, TRUE, two new files saved; FALSE plot visualization split saved, data . N_Ch number channels csv file. must either 4 8. 8-Channel oxygen meter 4 temperature 4 oxygen sensors. microplate reader files 4 step.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/csvSplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to split to csv files for independent analyses. — csvSplit","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":null,"dir":"Reference","previous_headings":"","what":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"Creates collection local directories help organizing analysis exporting output files specific folders associated metabolic performance function (required smooth data analysis).","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"","code":"organizeAnalysisLocally(   SMR.folder = TRUE,   MMR.folder = TRUE,   SDA.folder = TRUE,   MMR_SMR_AS_EPOC.folder = TRUE,   BACK_RESP.folder = TRUE )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"SMR.folder create local SMR folder, default = TRUE MMR.folder create local MMR folder, default = TRUE SDA.folder create local SDA folder, default = TRUE MMR_SMR_AS_EPOC.folder create local MMR_SMR_AS_EPOC.folder, default = TRUE BACK_RESP.folder create local BACK_RESP.folder, default = TRUE","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/organizeAnalysisLocally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convenient function to create a set of local working directories to streamline workflow — organizeAnalysisLocally","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":null,"dir":"Reference","previous_headings":"","what":"steepest slope analysis only — slidingSlope","title":"steepest slope analysis only — slidingSlope","text":"Estimates slopes every time iteration (often second), pulls steepest 30 s, 60 s, 90 s, 180 s slopes, well regression slope entire recorded duration.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"steepest slope analysis only — slidingSlope","text":"","code":"slidingSlope(data, Ch, local_path, N_Ch)"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"steepest slope analysis only — slidingSlope","text":"data Dataframe measurement present (O2 observed second ) Ch Channel needs analyzed (use format: c(1, 2), c(3), etc. 4 channels) local_path Logical. TRUE (default) returned files saved local working directory. Can also provide path function run independently N_Ch Number channels oxygen meter","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/slidingSlope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"steepest slope analysis only — slidingSlope","text":"output print","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":null,"dir":"Reference","previous_headings":"","what":"filters and converts raw data files — textFileConvert","title":"filters and converts raw data files — textFileConvert","text":"Uses convert format (strip unused columns rows) raw '.txt' data file produce .csv file required `MMR` `SMR` functions.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filters and converts raw data files — textFileConvert","text":"","code":"textFileConvert(   txt_file,   type_file,   nrowSkip = NULL,   N_Ch = 4,   local_path = TRUE,   exclude_first_measurement_s = 0,   convert_units = FALSE,   units_from = NULL,   units_to = NULL,   channels = c(1, 2, 3, 4),   salinity = 0,   atm_pressure = 1,   temperature = NULL,   device = \"A\",   file_extension_id = \"2\",   temperature_Ch )"},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filters and converts raw data files — textFileConvert","text":"txt_file name original “.txt” file oxygen meter type_file Indicates type software used record raw data, options: \"Firesting_pre2023\", \"Firesting_2023\", \"Witrox\", \"PreSense_microplate\" nrowSkip number rows skip default work; argument 'type_file' determines default N rows skip \"Firesting_pre2023\" = 19, \"Firesting_2023\" = 70, \"Witrox\" = 41; \"PreSense_microplate\" = 10, rows raw txt file often contain calibration information, IDs probes user defined settings N_Ch number oxygen meter channels. Options include 2, 4, 8, 24. (microplate). 2-channel oxygen meter used, argument ignored, enter 4 local_path Logical. TRUE (default) returned files saved local working directory. exclude_first_measurement_s number measurement point excluded beginning file (addition nrowSkip argument) convert_units Logical (FALSE = default). true, function passed rMR function .unit.convert convert O2 content units. units_from default NULL, options:\"mg/L\", \"PP\", \"pct\". passed rM::.unit.convert arg. .units.units_to = default NULL, options:\"mg/L\", \"PP\", \"pct\". passed rM::.unit.convert arg. .units.channels = c(1,2,3,4), indicate channels apply conversion salinity = 0, passed rMR::.unit.convert arg. salinity (must \"pp.thou\") atm_pressure = 1, passed rMR::.unit.convert arg. bar.press (must \"atm\") temperature user set consistent temperature channels (ºC) device \"Firesting_2023\" output files. Results multiple devices can recorded one file. differentiated uppper case letters \"\", \"B\", etc. use argument specify device used, default \"\". file_extension_id custom file extension saved csv file, default \"2\" temperature_Ch Numerical, select channel use temperature recording. used 4-channel firesting, probe/channel 1 plugged therefore values \"NA\". default channel 1.","code":""},{"path":"https://kraskura.github.io/AnalyzeResp/reference/textFileConvert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filters and converts raw data files — textFileConvert","text":"output print","code":""}]
